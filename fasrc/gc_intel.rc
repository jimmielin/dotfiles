module purge
module load git/2.17.0-fasrc01

module load cmake/3.17.3-fasrc01
module load python/3.6.3-fasrc02

# Modules for CentOS7

#module load intel/17.0.4-fasrc01
#module load openmpi/3.1.1-fasrc01
#module load netcdf/4.1.3-fasrc03


# new netcdf/openmpi hplin 10/30/20
##module load intel/18.0.5
#module load openmpi/4.0.1-fasrc01
#module load netcdf/4.7.3-fasrc01
#module load netcdf-fortran/4.5.1-fasrc01

# module load intel/18.0.5-fasrc01  openmpi/4.0.1-fasrc01 netcdf/4.7.3-fasrc01 netcdf-fortran/4.5.2-fasrc01
# this has hdf5/1.10.6-fasrc01

module load intel/17.0.4-fasrc01 mvapich2/2.3b-fasrc02 netcdf-fortran/4.4.4-fasrc06


# For GcPy
module load proj/5.0.1-fasrc01
module load geos/3.6.2-fasrc01

export CC=gcc
export OMPI_CC=$CC

export CXX=g++
export OMPI_CXX=$CXX

export FC=ifort
export F77=$FC
export F90=$FC
export OMPI_FC=$FC
export COMPILER=$FC
export ESMF_COMPILER=intel

# MPI Communication
export ESMF_COMM=openmpi
export MPI_ROOT=$MPI_HOME

# Base paths
export GC_BIN="$NETCDF_HOME/bin"
export GC_INCLUDE="$NETCDF_HOME/include"
export GC_LIB="$NETCDF_HOME/lib"

# Add to primary path
export PATH=${NETCDF_HOME}/bin:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${NETCDF_HOME}/lib

# If using NetCDF after the C/Fortran split (4.3+), then you will need to
# specify the following additional environment variables

# hplin 10/30/20
export GC_F_BIN="$NETCDF_FORTRAN_HOME/bin"
export GC_F_INCLUDE="$NETCDF_FORTRAN_HOME/include"
export GC_F_LIB="$NETCDF_FORTRAN_HOME/lib"
export PATH=${NETCDF_FORTRAN_HOME}/bin:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${NETCDF_FORTRAN_HOME}/lib

# Set ESMF optimization (g=debugging, O=optimized (capital o))
export ESMF_BOPT=O

# Set path to GMAO Fortran template library (gFTL) install directory
export gFTL=$(readlink -f ./gFTL)

# Specify number number of job slots for build
export NUM_JOB_SLOTS=8

ulimit -c unlimited              # coredumpsize
ulimit -l unlimited              # memorylocked
ulimit -u 50000                  # maxproc
ulimit -v unlimited              # vmemoryuse
ulimit -s unlimited              # stacksize

alias mco="make cleanup_output"

alias cc="make -j && make install"
